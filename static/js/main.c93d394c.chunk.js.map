{"version":3,"sources":["components/Container/Container.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","redux/contacts/contact-api.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","components/Button/Button.jsx","components/Spinner/Spinner.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","tagTypes","endpoints","builder","fetchContacts","query","providesTags","createContact","mutation","contactContent","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useCreateContactMutation","useDeleteContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","Container","title","children","className","s","container","Section","section","Button","type","onClick","disabled","classNames","btn","defaultProps","Spinner","size","box","spinner","ContactForm","isLoading","handleCreate","e","a","preventDefault","currentTarget","elements","value","reset","toast","success","onSubmit","form","label","pattern","required","input","Filter","onChange","filter","Contact","id","isDeleting","item","text","ContactList","contacts","list","map","contact","App","contactsArray","useState","setFilter","data","isFetching","target","toLowerCase","includes","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c93d394c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3jWEP\",\"title\":\"Container_title__2Lsxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2cKvc\",\"title\":\"Section_title__2VyZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2hSnr\",\"disabled\":\"Button_disabled__1p2XL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Spinner_box__kSGpn\",\"spinner\":\"Spinner_spinner__2bhWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1w3Z0\",\"input\":\"Filter_input__XYUpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__usyEL\",\"text\":\"Contact_text__1vwCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1HPsV\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_URL,\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: contactContent => ({\n        url: `/contacts`,\n        method: 'POST',\n        body: {\n          name: contactContent.name,\n          number: contactContent.number,\n        },\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n  useDeleteContactMutation,\n} = contactApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { contactApi } from './contacts/contact-api';\n\nexport const store = configureStore({\n  reducer: {\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ serializableCheck: false })\n      .concat(contactApi.middleware)\n      .concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h1 className={s.title}>{title}</h1>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ type, onClick, disabled, children }) {\n  return (\n    <button\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n      className={classNames(s.btn, disabled && s.disabled)}\n    >\n      {children}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  onClick: () => null,\n  disabled: false,\n  children: null,\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n};\n","import { ImSpinner } from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Spinner.module.css';\r\n\r\nexport default function Spinner({ size }) {\r\n  return (\r\n    <div className={s.box}>\r\n      <ImSpinner size={size} className={s.spinner} />\r\n    </div>\r\n  );\r\n}\r\n\r\nSpinner.propTypes = {\r\n  size: PropTypes.number.isRequired,\r\n};\r\n","import { toast } from 'react-toastify';\nimport { useCreateContactMutation } from 'redux/contacts/contact-api';\nimport Button from 'components/Button/Button';\nimport Spinner from 'components/Spinner/Spinner';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const handleCreate = async e => {\n    e.preventDefault();\n    createContact({\n      name: e.currentTarget.elements.name.value,\n      number: e.currentTarget.elements.number.value,\n    });\n    e.currentTarget.reset();\n    toast.success('Contact successfully created');\n  };\n\n  return (\n    <form onSubmit={handleCreate} className={s.form}>\n      <label className={s.label}>\n        <p className={s.title}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={s.input}\n        />\n\n        <p className={s.title}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={s.input}\n        />\n\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading && <Spinner size={18} />}\n          Create\n        </Button>\n      </label>\n    </form>\n  );\n}\n","import s from './Filter.module.css';\n\nexport default function Filter({ onChange }) {\n  return (\n    <label className={s.filter}>\n      Find contacts by name:\n      <input type=\"text\" className={s.input} onChange={onChange} />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useDeleteContactMutation } from 'redux/contacts/contact-api';\nimport Button from 'components/Button/Button';\nimport Spinner from 'components/Spinner/Spinner';\nimport s from './Contact.module.css';\n\nconst Contact = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const handleDelete = () => {\n    deleteContact(id);\n    toast.success('Contact successfully deleted');\n  };\n\n  return (\n    <li key={id} className={s.item}>\n      <p className={s.text}>{`${name}: ${number}`}</p>\n      <Button type=\"button\" onClick={handleDelete} disabled={isDeleting}>\n        {isDeleting && <Spinner size={18} />}\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import Contact from 'components/Contact/Contact';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact key={contact.id} {...contact} />\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { useFetchContactsQuery } from 'redux/contacts/contact-api';\nimport Container from 'components/Container/Container';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Spinner from 'components/Spinner/Spinner';\nimport 'App.css';\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const { data: contacts, isFetching } = useFetchContactsQuery();\n\n  const getVisibleContacts = contactsArray =>\n    contactsArray.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n\n  return (\n    <Container title=\"Phonebook\">\n      <Section>\n        <ContactForm />\n      </Section>\n\n      {isFetching && <Spinner size={100} />}\n\n      {!isFetching && (\n        <Section title=\"Contacts\">\n          <Filter onChange={e => setFilter(e.target.value)} />\n          <ContactList contacts={getVisibleContacts(contacts)} />\n        </Section>\n      )}\n\n      <ToastContainer autoClose={3000} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\nimport App from 'App';\nimport 'index.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ySDGe\",\"label\":\"ContactForm_label__3GP7T\",\"title\":\"ContactForm_title__1oNfj\",\"input\":\"ContactForm_input__3lecu\"};"],"sourceRoot":""}