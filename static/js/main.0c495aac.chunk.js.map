{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Spinner/Spinner.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Spinner/Spinner.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","process","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","post","deleteContact","id","delete","contactsOperations","loading","createReducer","pending","fulfilled","rejected","items","payload","state","filter","error","console","log","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","getLoading","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","Container","title","children","className","s","container","Section","section","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","hendleChenge","e","target","value","reset","onSubmit","preventDefault","map","alert","form","label","type","pattern","required","onChange","input","btn","Filter","ContactList","list","item","text","onClick","Spinner","size","box","spinner","App","isLoadingContacts","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,2B,mBCA3HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,mBCAnED,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,IAAM,qBAAqB,QAAU,2B,2KCC1CC,EAAeC,YAAa,yB,yCCCzCC,IAAMC,SAASC,QAAUC,8CAEzB,I,MAAMC,EAAgBC,YACpB,yBADoC,uCAEpC,WAAOC,EAAP,sBAAAC,EAAA,6DAAYC,EAAZ,EAAYA,gBAAZ,kBAE2BR,IAAMS,IAAI,aAFrC,uBAEYC,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,yDAKWF,EAAgB,EAAD,KAL1B,yDAFoC,yDAYhCG,EAAaN,YACjB,sBADiC,uCAEjC,uCAAAE,EAAA,6DAASK,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAYL,EAA3B,EAA2BA,gBAA3B,kBAE2BR,IAAMc,KAAK,YAAa,CAAEF,OAAMC,WAF3D,uBAEYH,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,2DAKWF,EAAgB,EAAD,KAL1B,0DAFiC,yDAY7BO,EAAgBV,YACpB,yBADoC,uCAEpC,WAAOW,EAAP,kBAAAT,EAAA,6DAAaC,EAAb,EAAaA,gBAAb,kBAEUR,IAAMiB,OAAN,oBAA0BD,IAFpC,gCAGWA,GAHX,yDAKWR,EAAgB,EAAD,KAL1B,yDAFoC,yDAiBvBU,EALY,CACzBd,gBACAO,aACAI,iBCvCII,EAAUC,aAAc,GAAD,mBAC1BF,EAAmBd,cAAciB,SAAU,kBAAM,KADvB,cAE1BH,EAAmBd,cAAckB,WAAY,kBAAM,KAFzB,cAG1BJ,EAAmBd,cAAcmB,UAAW,kBAAM,KAHxB,cAI1BL,EAAmBP,WAAWU,SAAU,kBAAM,KAJpB,cAK1BH,EAAmBP,WAAWW,WAAY,kBAAM,KALtB,cAM1BJ,EAAmBP,WAAWY,UAAW,kBAAM,KANrB,cAO1BL,EAAmBH,cAAcM,SAAU,kBAAM,KAPvB,cAQ1BH,EAAmBH,cAAcO,WAAY,kBAAM,KARzB,cAS1BJ,EAAmBH,cAAcQ,UAAW,kBAAM,KATxB,IAYvBC,EAAQJ,YAAc,IAAD,mBACxBF,EAAmBd,cAAckB,WAAY,SAAChB,EAAD,YAAMmB,WAD3B,cAExBP,EAAmBP,WAAWW,WAAY,SAACI,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BACtCC,GADsC,CAEzCD,OAJuB,cAMxBP,EAAmBH,cAAcO,WAAY,SAACI,EAAD,OAAUD,EAAV,EAAUA,QAAV,OAC5CC,EAAMC,QAAO,qBAAGX,KAAgBS,QAPT,IAUrBE,EAASP,YAAc,GAAD,eACzBtB,GAAe,SAACQ,EAAD,YAAMmB,YAGlBG,EAAQR,YAAc,MAAD,mBACxBF,EAAmBd,cAAcmB,UAAW,SAAAK,GAAK,OAAIC,QAAQC,IAAIF,MADzC,cAExBV,EAAmBd,cAAciB,SAAU,kBAAM,QAFzB,cAGxBH,EAAmBP,WAAWY,UAAW,SAAAK,GAAK,OAAIC,QAAQC,IAAIF,MAHtC,cAIxBV,EAAmBP,WAAWU,SAAU,kBAAM,QAJtB,cAKxBH,EAAmBH,cAAcQ,UAAW,SAAAK,GAAK,OAAIC,QAAQC,IAAIF,MALzC,cAMxBV,EAAmBH,cAAcM,SAAU,kBAAM,QANzB,IASZU,cAAgB,CAC7BZ,UACAK,QACAG,SACAC,UCxCWI,EAAQC,YAAe,CAClCC,QAAS,CACPC,SAAUC,GAEZC,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CAAEC,mBAAmB,IAASC,OAAOC,MAC5DC,UAAUvC,ICVCwC,EAAa,SAAAjB,GAAK,OAAIA,EAAMS,SAAShB,SACrCyB,EAAc,SAAAlB,GAAK,OAAIA,EAAMS,SAASX,OACtCqB,EAAY,SAAAnB,GAAK,OAAIA,EAAMS,SAASR,QAEpCmB,EAAqB,SAAApB,GAChC,IAAMS,EAAWS,EAAYlB,GAGvBqB,EAFSF,EAAUnB,GAEOsB,cAEhC,OAAOb,EAASR,QAAO,SAAAsB,GAAO,OAC5BA,EAAQrC,KAAKoC,cAAcE,SAASH,O,wBCRzB,SAASI,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzC,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACGJ,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,K,qBCJQ,SAASI,EAAT,GAAuC,IAApBL,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,0BAASC,UAAWC,IAAEG,QAAtB,UACGN,GAAS,oBAAIE,UAAWC,IAAEH,MAAjB,SAAyBA,IAClCC,K,4BCDQ,SAASM,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOhD,EAAP,KAAaiD,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO/C,EAAP,KAAeiD,EAAf,KACM3B,EAAW4B,YAAYnB,GACvBoB,EAAWC,cAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBxD,EAAR,EAAQA,KAAMyD,EAAd,EAAcA,MAEd,OAAQzD,GACN,IAAK,OACHiD,EAAQQ,GACR,MAEF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,SAcAC,EAAQ,WACZT,EAAQ,IACRC,EAAU,KAGZ,OACE,sBAAMS,SAhBc,SAAAJ,GACpBA,EAAEK,iBAEFrC,EAASsC,KAAI,SAAAxB,GAAO,OAAIA,EAAQrC,QAAMsC,SAAStC,GAC3C8D,MAAM,GAAD,OAAI9D,EAAJ,6BACLoD,EAAS9C,EAAmBP,WAAW,CAAEC,OAAMC,YAEnDyD,KAS+BhB,UAAWC,IAAEoB,KAA5C,SACE,wBAAOrB,UAAWC,IAAEqB,MAApB,UACE,mBAAGtB,UAAWC,IAAEH,MAAhB,kBACA,uBACEyB,KAAK,OACLjE,KAAK,OACLkE,QAAQ,yHACR1B,MAAM,kcACN2B,UAAQ,EACRV,MAAOzD,EACPoE,SAAUd,EACVZ,UAAWC,IAAE0B,QAGf,mBAAG3B,UAAWC,IAAEH,MAAhB,oBACA,uBACEyB,KAAK,MACLjE,KAAK,SACLkE,QAAQ,yFACR1B,MAAM,giBACN2B,UAAQ,EACRV,MAAOxD,EACPmE,SAAUd,EACVZ,UAAWC,IAAE0B,QAGf,wBAAQ3B,UAAWC,IAAE2B,IAArB,8B,qBClEO,SAASC,IACtB,IAAMd,EAAQN,YAAYlB,GACpBmB,EAAWC,cAEjB,OACE,wBAAOX,UAAWC,IAAE5B,OAApB,mCAEE,uBACEkD,KAAK,OACLR,MAAOA,EACPf,UAAWC,IAAE0B,MACbD,SAAU,SAAAb,GAAC,OAAIH,EAASlE,EAAaqE,EAAEC,OAAOC,c,qBCXvC,SAASe,IACtB,IAAMjD,EAAW4B,YAAYjB,GACvBkB,EAAWC,cAIjB,OACE,oBAAIX,UAAWC,IAAE8B,KAAjB,SACGlD,EAASsC,KAAI,SAAAxB,GAAO,OACnB,qBAAqBK,UAAWC,IAAE+B,KAAlC,UACE,mBAAGhC,UAAWC,IAAEgC,KAAhB,mBAA0BtC,EAAQrC,KAAlC,aAA2CqC,EAAQpC,UACnD,wBACEgE,KAAK,SACLvB,UAAWC,IAAE2B,IACbM,QAAS,kBAVMxE,EAUiBiC,EAAQjC,GAVnBgD,EAAS9C,EAAmBH,cAAcC,IAAhD,IAAAA,GAOjB,sBAFOiC,EAAQjC,S,iCCVV,SAASyE,GAAT,GAA4B,IAATC,EAAQ,EAARA,KAChC,OACE,qBAAKpC,UAAWC,KAAEoC,IAAlB,SACE,cAAC,KAAD,CAAWD,KAAMA,EAAMpC,UAAWC,KAAEqC,Y,MCK3B,SAASC,KACtB,IAAM7B,EAAWC,cACX6B,EAAoB/B,YAAYpB,GAMtC,OAJAoD,qBAAU,WACR/B,EAAS9C,EAAmBd,mBAC3B,CAAC4D,IAGF,eAACb,EAAD,CAAWC,MAAM,YAAjB,UACE,cAACK,EAAD,UACE,cAACE,EAAD,MAGDmC,GAAqB,cAACL,GAAD,CAASC,KAAM,OAEnCI,GACA,eAACrC,EAAD,CAASL,MAAM,WAAf,UACE,cAAC+B,EAAD,IACA,cAACC,EAAD,U,MCxBVY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlE,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJmE,SAASC,eAAe,U,kBCZ1BxG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,4B","file":"static/js/main.0c495aac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1HPsV\",\"item\":\"ContactList_item__3lMoq\",\"text\":\"ContactList_text__1BCXx\",\"btn\":\"ContactList_btn__2XiNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3jWEP\",\"title\":\"Container_title__2Lsxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2cKvc\",\"title\":\"Section_title__2VyZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1w3Z0\",\"input\":\"Filter_input__XYUpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Spinner_box__kSGpn\",\"spinner\":\"Spinner_spinner__2bhWW\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_URL;\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, number });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './contacts-actions';\r\nimport contactsOperations from './contacts-operations';\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsOperations.fetchContacts.pending]: () => true,\r\n  [contactsOperations.fetchContacts.fulfilled]: () => false,\r\n  [contactsOperations.fetchContacts.rejected]: () => false,\r\n  [contactsOperations.addContact.pending]: () => true,\r\n  [contactsOperations.addContact.fulfilled]: () => false,\r\n  [contactsOperations.addContact.rejected]: () => false,\r\n  [contactsOperations.deleteContact.pending]: () => true,\r\n  [contactsOperations.deleteContact.fulfilled]: () => false,\r\n  [contactsOperations.deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [contactsOperations.fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [contactsOperations.addContact.fulfilled]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [contactsOperations.deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [contactsOperations.fetchContacts.rejected]: error => console.log(error),\r\n  [contactsOperations.fetchContacts.pending]: () => null,\r\n  [contactsOperations.addContact.rejected]: error => console.log(error),\r\n  [contactsOperations.addContact.pending]: () => null,\r\n  [contactsOperations.deleteContact.rejected]: error => console.log(error),\r\n  [contactsOperations.deleteContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  loading,\r\n  items,\r\n  filter,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","export const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ title, children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h1 className={s.title}>{title}</h1>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from 'redux/contacts/contacts-selectors';\r\nimport contactsOperations from 'redux/contacts/contacts-operations';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const hendleChenge = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const hendleSubmite = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? alert(`${name} is already in contacts.`)\r\n      : dispatch(contactsOperations.addContact({ name, number }));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={hendleSubmite} className={s.form}>\r\n      <label className={s.label}>\r\n        <p className={s.title}>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={hendleChenge}\r\n          className={s.input}\r\n        />\r\n\r\n        <p className={s.title}>Number</p>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={hendleChenge}\r\n          className={s.input}\r\n        />\r\n\r\n        <button className={s.btn}>Add contact</button>\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\nimport { changeFilter } from 'redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        className={s.input}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from 'redux/contacts/contacts-selectors';\r\nimport contactsOperations from 'redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const forDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id} className={s.item}>\r\n          <p className={s.text}>{`${contact.name}: ${contact.number}`}</p>\r\n          <button\r\n            type=\"button\"\r\n            className={s.btn}\r\n            onClick={() => forDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { ImSpinner } from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Spinner.module.css';\r\n\r\nexport default function Spinner({ size }) {\r\n  return (\r\n    <div className={s.box}>\r\n      <ImSpinner size={size} className={s.spinner} />\r\n    </div>\r\n  );\r\n}\r\n\r\nSpinner.propTypes = {\r\n  size: PropTypes.number.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getLoading } from 'redux/contacts/contacts-selectors';\r\nimport contactsOperations from 'redux/contacts/contacts-operations';\r\nimport Container from 'components/Container/Container';\r\nimport Section from 'components/Section/Section';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Spinner from 'components/Spinner/Spinner';\r\nimport 'App.css';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isLoadingContacts = useSelector(getLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container title=\"Phonebook\">\r\n      <Section>\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      {isLoadingContacts && <Spinner size={100} />}\r\n\r\n      {!isLoadingContacts && (\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <ContactList />\r\n        </Section>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from 'redux/store';\r\nimport App from 'App';\r\nimport 'index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ySDGe\",\"label\":\"ContactForm_label__3GP7T\",\"title\":\"ContactForm_title__1oNfj\",\"input\":\"ContactForm_input__3lecu\",\"btn\":\"ContactForm_btn__1p7SF\"};"],"sourceRoot":""}